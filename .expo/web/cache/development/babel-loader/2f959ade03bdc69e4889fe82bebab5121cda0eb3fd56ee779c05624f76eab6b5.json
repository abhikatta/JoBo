{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../styles\";\nimport { useState } from \"react\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LOGINMAIN = function LOGINMAIN(_ref) {\n  var login = _ref.login,\n    loginAnonymously = _ref.loginAnonymously;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    securePassword = _useState6[0],\n    setSecurePassword = _useState6[1];\n  var handlePassword = function handlePassword() {\n    setSecurePassword(function (prevSecurePassword) {\n      return !prevSecurePassword;\n    });\n  };\n  var clearCredentials = function clearCredentials() {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 22,\n        marginHorizontal: \"10%\",\n        bottom: \"5%\",\n        justifyContent: \"center\",\n        alignContent: \"center\"\n      },\n      children: \"Hi there, enter your credentials to get started!\"\n    }), _jsx(TextInput, {\n      value: email,\n      numberOfLines: 1,\n      maxLength: 40,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(email) {\n        return setEmail(email);\n      },\n      autoComplete: \"email\",\n      style: styles.TextInput\n    }), _jsx(TextInput, {\n      value: password,\n      numberOfLines: 1,\n      maxLength: 40,\n      secureTextEntry: securePassword,\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      style: styles.TextInput,\n      onChangeText: function onChangeText(password) {\n        return setPassword(password);\n      }\n    }), _jsx(BouncyCheckbox, {\n      style: styles.showPassword,\n      onPress: handlePassword,\n      isChecked: false,\n      size: 20,\n      fillColor: \"#00aaff\",\n      textStyle: {\n        textDecorationLine: \"none\",\n        fontSize: 13,\n        width: 100\n      },\n      text: \"Show Password\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        login(email, password), clearCredentials();\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Log In\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        loginAnonymously(), clearCredentials();\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Log In Anonymously\"\n      })\n    })]\n  });\n};\nexport default LOGINMAIN;","map":{"version":3,"names":["styles","useState","BouncyCheckbox","jsx","_jsx","jsxs","_jsxs","LOGINMAIN","_ref","login","loginAnonymously","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","securePassword","setSecurePassword","handlePassword","prevSecurePassword","clearCredentials","View","style","container","children","Text","fontSize","marginHorizontal","bottom","justifyContent","alignContent","TextInput","value","numberOfLines","maxLength","placeholder","onChangeText","autoComplete","secureTextEntry","showPassword","onPress","isChecked","size","fillColor","textStyle","textDecorationLine","width","text","TouchableOpacity","button"],"sources":["D:/Projects/JoBo/Authentication/LoginScreen.jsx"],"sourcesContent":["import { Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport { styles } from \"../styles\";\r\nimport { useState } from \"react\";\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\n\r\nconst LOGINMAIN = ({ login, loginAnonymously }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [securePassword, setSecurePassword] = useState(true);\r\n  const handlePassword = () => {\r\n    setSecurePassword((prevSecurePassword) => !prevSecurePassword);\r\n  };\r\n  const clearCredentials = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text\r\n        style={{\r\n          fontSize: 22,\r\n          marginHorizontal: \"10%\",\r\n          bottom: \"5%\",\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n        }}>\r\n        Hi there, enter your credentials to get started!\r\n      </Text>\r\n      <TextInput\r\n        value={email}\r\n        numberOfLines={1}\r\n        maxLength={40}\r\n        placeholder=\"Email\"\r\n        onChangeText={(email) => setEmail(email)}\r\n        autoComplete=\"email\"\r\n        style={styles.TextInput}\r\n      />\r\n      <TextInput\r\n        value={password}\r\n        numberOfLines={1}\r\n        maxLength={40}\r\n        secureTextEntry={securePassword}\r\n        placeholder=\"Password\"\r\n        autoComplete=\"password\"\r\n        style={styles.TextInput}\r\n        onChangeText={(password) => setPassword(password)}\r\n      />\r\n\r\n      <BouncyCheckbox\r\n        style={styles.showPassword}\r\n        onPress={handlePassword}\r\n        isChecked={false}\r\n        size={20}\r\n        fillColor=\"#00aaff\"\r\n        textStyle={{\r\n          textDecorationLine: \"none\",\r\n          fontSize: 13,\r\n          width: 100,\r\n        }}\r\n        text=\"Show Password\"\r\n      />\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          login(email, password), clearCredentials();\r\n        }}>\r\n        <Text style={styles.text}>Log In</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          loginAnonymously(), clearCredentials();\r\n        }}>\r\n        <Text style={styles.text}>Log In Anonymously</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\nexport default LOGINMAIN;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}